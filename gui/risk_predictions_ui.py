# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'predictions.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_RiskPredictionsWindow(object):
    def setupUi(self, RiskPredictionsWindow):
        RiskPredictionsWindow.setObjectName("RiskPredictionsWindow")
        RiskPredictionsWindow.resize(1280, 840)   
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        RiskPredictionsWindow.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        RiskPredictionsWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../res/ML4CYBER_Logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        RiskPredictionsWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(RiskPredictionsWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(25, 50, 1250, 300))
        self.groupBox.setObjectName("groupBox")
        self.btn_LoadSchema = QtWidgets.QPushButton(self.groupBox)
        self.btn_LoadSchema.setGeometry(QtCore.QRect(30, 89, 121, 31))
        self.btn_LoadSchema.setObjectName("btn_LoadSchema")
        # Tooltip stating the functionality of the 'Load Schema' button with tooltip duration of 6 seconds.
        self.btn_LoadSchema.setToolTip("Load the schema created in 'Risk' window.")
        self.btn_LoadSchema.setToolTipDuration(6000)
        self.btn_LoadDataset = QtWidgets.QPushButton(self.groupBox)
        self.btn_LoadDataset.setGeometry(QtCore.QRect(30, 30, 121, 31))
        self.btn_LoadDataset.setObjectName("btn_LoadDataset")
        # Tooltip stating the functionality of the 'Load Dataset' button with tooltip duration of 6 seconds.
        self.btn_LoadDataset.setToolTip("Load the dataset in csv format.")
        self.btn_LoadDataset.setToolTipDuration(6000)
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(200, 89, 41, 31))
        self.label.setObjectName("label")
        self.txtB_SchemaPath = QtWidgets.QLineEdit(self.groupBox)
        self.txtB_SchemaPath.setEnabled(True)
        self.txtB_SchemaPath.setGeometry(QtCore.QRect(220, 90, 761, 31))
        self.txtB_SchemaPath.setReadOnly(True)
        self.txtB_SchemaPath.setObjectName("txtB_SchemaPath")
        self.txtB_InfoSamples = QtWidgets.QLineEdit(self.groupBox)
        self.txtB_InfoSamples.setEnabled(True)
        self.txtB_InfoSamples.setGeometry(QtCore.QRect(1100, 40 , 81, 22))
        self.txtB_InfoSamples.setText("")
        self.txtB_InfoSamples.setReadOnly(True)
        self.txtB_InfoSamples.setObjectName("txtB_InfoSamples")
        #Tooltip stating the functionality of the 'Samples' box with tooltip duration of 6 seconds.
        self.txtB_InfoSamples.setToolTip("Shows the total number of samples in the dataset.")
        self.txtB_InfoSamples.setToolTipDuration(6000)
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setGeometry(QtCore.QRect(1015, 40, 91, 22))
        self.label_7.setObjectName("label_7")
        self.txtB_DatasetPath = QtWidgets.QLineEdit(self.groupBox)
        self.txtB_DatasetPath.setEnabled(True)
        self.txtB_DatasetPath.setGeometry(QtCore.QRect(220, 31, 761, 31))
        self.txtB_DatasetPath.setReadOnly(True)
        self.txtB_DatasetPath.setObjectName("txtB_DatasetPath")
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(170, 30, 41, 31))
        self.label_2.setObjectName("label_2")
        self.txtB_ModelPath = QtWidgets.QLineEdit(self.groupBox)
        self.txtB_ModelPath.setEnabled(True)
        self.txtB_ModelPath.setGeometry(QtCore.QRect(220, 151, 761, 31))
        self.txtB_ModelPath.setReadOnly(True)
        self.txtB_ModelPath.setObjectName("txtB_ModelPath")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(195, 200, 41, 31))
        self.label_3.setObjectName("label_3")
        self.btn_LoadModel = QtWidgets.QPushButton(self.groupBox)
        self.btn_LoadModel.setGeometry(QtCore.QRect(30, 150, 121, 31))
        self.btn_LoadModel.setObjectName("btn_LoadModel")
        # Tooltip stating the functionality of the 'Load Model' button with tooltip duration of 6 seconds.
        self.btn_LoadModel.setToolTip("Load the model that was trained in 'Risk' window.")
        self.btn_LoadModel.setToolTipDuration(6000)
        self.btn_Predict = QtWidgets.QPushButton(self.groupBox)
        self.btn_Predict.setGeometry(QtCore.QRect(220, 220, 201, 61))
        self.btn_Predict.setObjectName("btn_Predict")
        self.btn_SaveResults = QtWidgets.QPushButton(self.groupBox)
        self.btn_SaveResults.setGeometry(QtCore.QRect(480, 220, 201, 61))
        self.btn_SaveResults.setObjectName("btn_SaveResults")
        self.btn_Help = QtWidgets.QPushButton(self.groupBox)
        self.btn_Help.setGeometry(QtCore.QRect(740, 220, 201, 61))
        self.btn_Help.setObjectName("btn_Help")
        self.label_19 = QtWidgets.QLabel(self.groupBox)
        self.label_19.setGeometry(QtCore.QRect(1010, 150, 191, 31))
        self.label_19.setObjectName("label_19")
        self.dsBox_Threshold = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.dsBox_Threshold.setGeometry(QtCore.QRect(1120, 150, 100, 31))
        self.dsBox_Threshold.setDecimals(2)
        self.dsBox_Threshold.setMaximum(1.0)
        self.dsBox_Threshold.setSingleStep(0.1)
        self.dsBox_Threshold.setProperty("value", 0.5)
        self.dsBox_Threshold.setObjectName("dsBox_Threshold")
        # Tooltip stating the functionality of the 'Threshold' box with tooltip duration of 6 seconds.
        self.dsBox_Threshold.setToolTip("Helps map a logistic regression value to binary value. Optimal value - 0.50")
        self.dsBox_Threshold.setToolTipDuration(6000)

        #Adding the horizontal layout of the widget to help the automatic resizing
        self.hlayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.hlayout.setObjectName("hlayout")
        self.hlayout.setContentsMargins(0,0,0,0)
        self.hlayout.setSpacing(10)

        #Adding the vertical layout of the widget to help the resizing the window
        self.vlayout = QtWidgets.QVBoxLayout()
        self.vlayout.setObjectName("vlayout")
        self.vlayout.setContentsMargins(50,0,50,0)
        self.vlayout.setSpacing(0)

        #Adding horizontal layout1
        self.hlayout1 = QtWidgets.QHBoxLayout(self.groupBox)
        self.hlayout1.setObjectName("hlayout1")
        self.hlayout1.setContentsMargins(0,0,0,0)
        self.hlayout1.setSpacing(10)

        #Adding horizontal Layout2
        self.hlayout2 = QtWidgets.QHBoxLayout(self.groupBox)
        self.hlayout2.setObjectName("hlayout2")
        self.hlayout2.setContentsMargins(10,0,10,0)
        self.hlayout2.setSpacing(20)

        #Adding Horizontal Layout3
        self.hlayout3 = QtWidgets.QHBoxLayout(self.groupBox)
        self.hlayout3.setObjectName("hlayout3")
        self.hlayout3.setContentsMargins(0,0,0,0)
        self.hlayout3.setSpacing(20)

        #Adding horizontal layout4
        self.hlayout4 = QtWidgets.QHBoxLayout(self.groupBox)
        self.hlayout4.setObjectName("hlayout4")
        self.hlayout4.setContentsMargins(0,0,0,0)
        self.hlayout4.setSpacing(20)

        #Adding horizontal Layout5
        self.hlayout5 = QtWidgets.QHBoxLayout(self.groupBox)
        self.hlayout5.setObjectName("hlayout5")
        self.hlayout5.setContentsMargins(0,0,0,0)
        self.hlayout5.setSpacing(20)

         #Adding a vertical Layout2
        self.vlayout1 = QtWidgets.QVBoxLayout()
        self.vlayout1.setObjectName("vlayout")
        self.vlayout1.setContentsMargins(50,0,50,0)
        self.vlayout1.setSpacing(0)

        self.hlayout.addWidget(self.groupBox, stretch=4)

         #adding the First row to the Hlayout2
        self.hlayout2.addWidget(self.btn_LoadDataset, stretch=1)
        self.hlayout2.addWidget(self.label)
        self.hlayout2.addWidget(self.txtB_DatasetPath, stretch=2)
        self.hlayout2.addWidget(self.label_7)
        self.hlayout2.addWidget(self.txtB_InfoSamples, stretch=2)

        #Adding the second row to the Hlayout3
        self.hlayout3.addWidget(self.btn_LoadSchema, stretch=1)
        self.hlayout3.addWidget(self.label_2)
        self.hlayout3.addWidget(self.txtB_SchemaPath, stretch= 3)

        #Adding the third row to the Hlayout4
        self.hlayout4.addWidget(self.btn_LoadModel, stretch=2)
        self.hlayout4.addWidget(self.label_3)
        self.hlayout4.addWidget(self.txtB_ModelPath, stretch = 4)
        self.hlayout4.addWidget(self.label_19)
        self.hlayout4.addWidget(self.dsBox_Threshold, stretch = 4)

        #Adding the last row to the HLayout5
        self.hlayout5.addWidget(self.btn_Predict, stretch=1)
        self.hlayout5.addWidget(self.btn_SaveResults, stretch=1)
        self.hlayout5.addWidget(self.btn_Help, stretch=1)

        #Adding all the horizontal layouts to the vertical layout
        self.vlayout1.addLayout(self.hlayout2)
        self.vlayout1.addLayout(self.hlayout3)
        self.vlayout1.addLayout(self.hlayout4)
        self.vlayout1.addLayout(self.hlayout5)
        self.hlayout1.addLayout(self.vlayout1)

        #Adding the hLayout to the main layout
        self.hlayout.addLayout(self.hlayout1)

        RiskPredictionsWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(RiskPredictionsWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1280, 21))
        self.menubar.setObjectName("menubar")
        RiskPredictionsWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(RiskPredictionsWindow)
        self.statusbar.setObjectName("statusbar")
        RiskPredictionsWindow.setStatusBar(self.statusbar)

        self.retranslateUi(RiskPredictionsWindow)
        QtCore.QMetaObject.connectSlotsByName(RiskPredictionsWindow)

    def retranslateUi(self, PredictionsWindow):
        _translate = QtCore.QCoreApplication.translate
        PredictionsWindow.setWindowTitle(_translate("PredictionsWindow", "Predictions | Vinci ML Tool"))
        self.btn_LoadSchema.setText(_translate("PredictionsWindow", "Load Schema"))
        self.label.setText(_translate("PredictionsWindow", "Path:"))
        self.groupBox.setTitle(_translate("PredictionsWindow", "Dataset - Information"))
        self.label_7.setText(_translate("PredictionsWindow", "Samples"))
        self.label_2.setText(_translate("PredictionsWindow", "Path:"))
        self.btn_LoadDataset.setText(_translate("PredictionsWindow", "Load Dataset"))
        self.label_3.setText(_translate("PredictionsWindow", "Path:"))
        self.btn_LoadModel.setText(_translate("PredictionsWindow", "Load Model"))
        self.btn_Predict.setText(_translate("PredictionsWindow", "Predict"))
        self.btn_SaveResults.setText(_translate("PredictionsWindow", "Save Results"))
        self.btn_Help.setText(_translate("PredictionsWindow", "Help"))
        self.label_19.setText(_translate("PredictionsWindow", "Threshold:"))
import menu_res_rc